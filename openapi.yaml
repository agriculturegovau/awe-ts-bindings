openapi: "3.0.0"
info:
  description: ""
  version: "1.0.0"
  title: "AWE intelligence"

paths:
  /intelligenceapi/meat-hygiene/national:
    get:
      summary: "Get national scores"
      description: ""
      operationId: "GetNationalScore"
      responses:
        "200":
          description: "One fortnights worth of score"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Score"

  /intelligenceapi/meat-hygiene/establishments:
    get:
      summary: "Get establishment scores"
      description: ""
      operationId: "GetEstablishmentsScore"
      parameters:
      - name: "ids"
        in: "query"
        description: "Filter to only chosen establishment ids"
        required: false
        schema:
          type: "array"
          items:
            type: "number"
      responses:
        "200":
          description: "One fortnights worth of score"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Score"

  /intelligenceapi/meat-hygiene-assessment/{establishmentId}:
    get:
      summary: "Get meat hygiene assessment scores"
      description: ""
      operationId: "GetMeatHygieneAssessmentResult"
      parameters:
      - name: establishmentId
        in: path
        description: Establishment ID
        required: true
        schema:
          type: integer
          format: int64
      - name: dateStart
        in: query
        description: Start date for the report
        required: true
        schema:
          type: string
          format: date
      - name: dateEnd
        in: query
        description: End date for the report
        required: true
        schema:
          type: string
          format: date
      - name: performanceConcern
        in: query
        description: Performance concern
        required: true
        schema:
          type: string
          # add enums
      - name: meatCondition
        in: query
        description: Meat Condition
        required: true
        schema:
          type: string
          # add enums
      - name: species
        in: query
        description: End date for the report
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/Species"
      responses:
        "200":
          description: "An array of data per day"
          content:
            application/json:
              schema:

                type: "object"
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/MeatHygieneAuditDatum"
                  metadata:
                    $ref: "#/components/schemas/MeatHygieneAuditMetadatum"

components:
  schemas:
    Score:
      type: "object"
      properties:
        metadata_period_in_days:
          type: "integer"
          format: "int32"
        establishment_id:
          type: "integer"
          format: "int32"
        total_active_breaches:
          type: "integer"
          format: "int32"
        total_active_reported_concerns:
          type: "integer"
          format: "int32"
        total_species:
          type: "integer"
          format: "int32"
        total_establishments:
          type: "integer"
          format: "int32"
        establishment_name:
          type: "string"
        percentage_total_hygiene_score:
          type: "number"
          format: "float"
        metadata_date_end:
          type: "string"
          format: "date-time"
    MeatHygieneAuditDatum:
      type: "object"
      properties:
        countKills:
          type: "integer"
          format: "int32"
          nullable: true
        establishmentId:
          type: "integer"
          format: "int32"
        averageHygieneScoreEstablishment:
          type: "number"
          format: "float"
          nullable: true
        averageHygieneScoreDepartment:
          type: "number"
          format: "float"
          nullable: true
        averageHygieneScoreEstablishmentNational14Day:
          type: "number"
          format: "float"
          nullable: true
        date:
          type: "string"
          format: "date"
          nullable: true
        countZeroToleranceDetectionEstablishment:
          type: "number"
          format: "int32"
          nullable: true
        countZeroToleranceDetectionDepartment:
          type: "number"
          format: "int32"
          nullable: true
        average14DayNationalCountZeroToleranceDetectionEstablishment:
          type: "number"
          format: "float"
          nullable: true
        countZeroToleranceBreachEstablishment:
          type: "number"
          format: "int32"
          nullable: true
        countZeroToleranceBreachDepartment:
          type: "number"
          format: "int32"
          nullable: true
        average14DayNationalCountZeroToleranceBreachEstablishment:
          type: "number"
          format: "float"
          nullable: true
        upperMarginThreshold:
          type: "number"
          format: "float"
          nullable: true
        lowerMarginThreshold:
          type: "number"
          format: "float"
          nullable: true

    MeatHygieneAuditMetadatum:
      properties:
        updatedAt:
          type: "string"
          format: "date-time"
        dateStart:
          type: "string"
          format: "date"
        dateEnd:
          type: "string"
          format: "date"
        establishmentId:
          type: "integer"
          format: "int32"
        species:
          type: array
          items:
            $ref: "#/components/schemas/Species"
    Species:
      type: string
      enum:
        - 'N/A'
        - 'Pigs'
        - 'Orvine'
        - 'Cattle'
        - 'Calves'
        - 'Goats'
        - 'Beef'
